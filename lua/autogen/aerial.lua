-- [nfnl] Compiled from fnl/aerial.fnl by https://github.com/Olical/nfnl, do not edit.
local M = require("aerial")
local backends = {"treesitter", "lsp"}
local icons = {Text = "\243\176\137\191", Method = "\243\176\138\149", Function = "\243\176\138\149", Constructor = "\239\144\163", Field = "\243\176\156\162", Variable = "\243\176\128\171", Class = "\243\176\160\177", Interface = "\239\131\168", Module = "\239\146\135", Property = "\243\176\156\162", Unit = "\243\176\145\173", Value = "\243\176\142\160", Enum = "\239\133\157", Keyword = "\243\176\140\139", Snippet = "\239\145\143", Color = "\243\176\143\152", File = "\243\176\136\153", Reference = "\243\176\136\135", Folder = "\243\176\137\139", EnumMember = "\239\133\157", Constant = "\243\176\143\191", Struct = "\243\176\153\133", Event = "\239\131\167", Operator = "\243\176\134\149", TypeParameter = "\243\176\151\180"}
local layout = {max_width = 0.25, min_width = 0.15, default_direction = "float", placement = "window"}
local float = {border = "none", relative = "cursor", max_height = 0.9, min_height = {8, 0.1}}
local keymaps = {["g?"] = "actions.show_help", ["<CR>"] = "actions.jump", ["<2-LeftMouse>"] = "actions.jump", ["<C-v>"] = "actions.jump_vsplit", ["<C-s>"] = "actions.jump_split", p = "actions.scroll", ["<C-j>"] = "actions.down_and_scroll", ["<C-k>"] = "actions.up_and_scroll", ["{"] = "actions.prev", ["}"] = "actions.next", ["[["] = "actions.prev_up", ["]]"] = "actions.next_up", q = "actions.close", o = "actions.tree_toggle", za = "actions.tree_toggle", O = "actions.tree_toggle_recursive", zA = "actions.tree_toggle_recursive", l = "actions.tree_open", zo = "actions.tree_open", L = "actions.tree_open_recursive", zO = "actions.tree_open_recursive", h = "actions.tree_close", zc = "actions.tree_close", H = "actions.tree_close_recursive", zC = "actions.tree_close_recursive", zr = "actions.tree_increase_fold_level", zR = "actions.tree_open_all", zm = "actions.tree_decrease_fold_level", zM = "actions.tree_close_all", zx = "actions.tree_sync_folds", zX = "actions.tree_sync_folds"}
local filter_kind = {"Class", "Constructor", "Enum", "Function", "Method", "Interface", "Module", "Method", "Struct"}
local ignore = {diff_windows = true, filetypes = {}, buftypes = "special", wintypes = "special", unlisted_buffers = false}
local treesitter = {update_delay = 500}
local lsp = {update_when_errors = true, update_delay = 600, diagnostics_trigger_update = false}
local guides = {mid_item = "\226\148\156\226\148\128", last_item = "\226\148\148\226\148\128", nested_top = "\226\148\130 ", whitespace = "  "}
return M.setup({backends = backends, icons = icons, layout = layout, float = float, keymaps = keymaps, filter_kind = filter_kind, ignore = ignore, treesitter = treesitter, lsp = lsp, guides = guides})
